<?php
session_start();
require 'db.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

$search = trim($_GET['q'] ?? '');

if ($search !== '') {
    $stmt = $pdo->prepare("
        SELECT posts.*, users.name AS author_name, users.id AS author_id
        FROM posts
        JOIN users ON posts.author_id = users.id
        WHERE posts.title LIKE :q OR posts.content LIKE :q
        ORDER BY created_at DESC
    ");
    $stmt->execute(['q' => "%$search%"]);
} else {
    $stmt = $pdo->query("
        SELECT posts.*, users.name AS author_name, users.id AS author_id
        FROM posts
        JOIN users ON posts.author_id = users.id
        ORDER BY created_at DESC
    ");
}
$posts = $stmt->fetchAll();
?>

<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <title>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –±–ª–æ–≥</title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
        }

        header {
            background: #6c5ce7;
            color: white;
            padding: 20px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
        }

        nav {
            background: white;
            padding: 10px 20px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        nav a {
            color: #6c5ce7;
            text-decoration: none;
            font-weight: bold;
            margin-left: 15px;
        }

        nav form {
            display: inline-flex;
            align-items: center;
        }

        nav input[type="text"] {
            padding: 6px;
            border-radius: 6px;
            border: 1px solid #ccc;
        }

        nav button {
            padding: 6px 12px;
            margin-left: 5px;
            background: #6c5ce7;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }

        .container {
            max-width: 1000px;
            margin: 30px auto;
            padding: 0 20px;
        }

        .news-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
        }

        .news-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 3px 8px rgba(0,0,0,0.08);
        }

        .news-card img {
            width: 100%;
            border-radius: 8px;
            margin-bottom: 10px;
            cursor: pointer;
        }

        .news-card h3 {
            margin: 0 0 10px;
            color: #6c5ce7;
        }

        .news-card small {
            color: #555;
        }

        .news-card p {
            color: #333;
        }

        .like-button {
            background: none;
            border: none;
            color: #e74c3c;
            font-size: 16px;
            cursor: pointer;
            margin-top: 10px;
        }

        .comment-link {
            color: #3498db;
            text-decoration: none;
            font-size: 16px;
            margin-left: 10px;
        }

        .edit-delete {
            margin-top: 10px;
        }

        .edit-delete a {
            margin-right: 10px;
            font-size: 14px;
            color: darkorange;
        }

        .edit-delete a.delete {
            color: red;
        }

        .comments-preview {
            margin-top: 15px;
            padding-top: 10px;
            border-top: 1px solid #ccc;
        }

        .comment {
            margin-bottom: 10px;
        }

        .comment strong {
            color: #2c3e50;
        }

        .comment small {
            color: #7f8c8d;
            font-size: 0.85em;
        }

        footer {
            margin-top: 40px;
            text-align: center;
            background: #6c5ce7;
            color: white;
            padding: 15px;
        }
    </style>
</head>
<body>

<header>
    üì∞ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –ë–ª–æ–≥
</header>

<nav>
    <div style="display: flex; align-items: center;">
        –í—ñ—Ç–∞—î–º–æ, <strong><?= htmlspecialchars($_SESSION['user_name']) ?></strong>!
        <form method="GET" style="margin-left: 30px;">
            <input type="text" name="q" placeholder="üîç –ü–æ—à—É–∫..." value="<?= htmlspecialchars($search) ?>">
            <button type="submit">–ü–æ—à—É–∫</button>
        </form>
    </div>
    <div>
        <a href="create_post.php">‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç</a>
        <a href="users.php">üë• –£—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</a>
        <a href="profile.php">üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å</a>
        <a href="logout.php">üö™ –í–∏–π—Ç–∏</a>
    </div>
</nav>

<div class="container">
    <div style="background:#fffbe6; border:1px solid #ffeaa7; padding:20px; border-radius:10px; margin-bottom:30px;">
        <h3 style="color:#6c5ce7;">‚ÑπÔ∏è –ü—Ä–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –±–ª–æ–≥</h3>
        <p>–¶–µ–π —Å–∞–π—Ç –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ –∫–æ–º–ø–∞–Ω—ñ—ó:</p>
        <ul>
            <li>üì∞ –ü—É–±–ª—ñ–∫–∞—Ü—ñ—ó –Ω–æ–≤–∏–Ω —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω—å</li>
            <li>üí¨ –ö–æ–º–µ–Ω—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è</li>
            <li>üë• –ü—Ä–æ—Ñ—ñ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</li>
            <li>üîç –ü–æ—à—É–∫ –ø–æ –ø–æ—Å—Ç–∞—Ö</li>
            <li>üì© –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤‚Äô—è–∑–æ–∫</li>
        </ul>
    </div>

    <h2>–û—Å—Ç–∞–Ω–Ω—ñ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó<?= $search ? ' –∑–∞ –∑–∞–ø–∏—Ç–æ–º: ' . htmlspecialchars($search) : '' ?></h2>

    <?php if (empty($posts)): ?>
        <p>–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π.</p>
    <?php else: ?>
        <div class="news-grid">
            <?php foreach ($posts as $post): ?>
                <div class="news-card">
                    <?php if (!empty($post['image'])): ?>
                        <a href="view_post.php?id=<?= $post['id'] ?>">
                            <img src="<?= htmlspecialchars($post['image']) ?>" alt="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Å—Ç—É">
                        </a>
                    <?php endif; ?>

                    <h3>
                        <a href="view_post.php?id=<?= $post['id'] ?>" style="text-decoration:none; color:inherit;">
                            <?= htmlspecialchars($post['title']) ?>
                        </a>
                    </h3>

                    <small>
                        –ê–≤—Ç–æ—Ä: <a href="user_profile.php?id=<?= $post['author_id'] ?>">
                            <?= htmlspecialchars($post['author_name']) ?>
                        </a> |
                        <?= $post['created_at'] ?>
                    </small>

                    <p><?= nl2br(htmlspecialchars(mb_strimwidth($post['content'], 0, 200, '...'))) ?></p>

                    <form method="POST" action="like_post.php" style="display:inline;">
                        <input type="hidden" name="post_id" value="<?= $post['id'] ?>">
                        <button type="submit" class="like-button">‚ù§Ô∏è <?= $post['likes'] ?></button>
                    </form>

                    <a href="view_post.php?id=<?= $post['id'] ?>" class="comment-link">üí¨ –ö–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏</a>

                    <?php if ($_SESSION['user_id'] == $post['author_id']): ?>
                        <div class="edit-delete">
                            <a href="edit_post.php?id=<?= $post['id'] ?>">‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</a>
                            <a href="delete_post.php?id=<?= $post['id'] ?>" class="delete" onclick="return confirm('–í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å—Ç?');">üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏</a>
                        </div>
                    <?php endif; ?>

                    <?php
                    $comment_stmt = $pdo->prepare("
                        SELECT comments.*, users.name AS commenter_name
                        FROM comments
                        JOIN users ON comments.user_id = users.id
                        WHERE comments.post_id = ?
                        ORDER BY comments.created_at ASC
                        LIMIT 3
                    ");
                    $comment_stmt->execute([$post['id']]);
                    $comments = $comment_stmt->fetchAll();
                    ?>

                    <?php if ($comments): ?>
                        <div class="comments-preview">
                            <h4>–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ:</h4>
                            <?php foreach ($comments as $comment): ?>
                                <div class="comment">
                                    <strong><?= htmlspecialchars($comment['commenter_name']) ?>:</strong>
                                    <p><?= nl2br(htmlspecialchars($comment['content'])) ?></p>
                                    <small><?= $comment['created_at'] ?></small>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    <?php endif; ?>
                </div>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>
</div>

<footer>
    &copy; <?= date("Y") ?> –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –±–ª–æ–≥. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ.
</footer>

</body>
</html>
